//
syntax = "proto3";
package khepri.horus;

import "common.proto";

option go_package = "khepri.dev/horus/pb";

//
service Horus {
	// List identities
	rpc ListIdentities(ListIdentitiesReq) returns (ListIdentitiesRes) {};
	// Creates organization.
	rpc NewOrg(NewOrgReq) returns (NewOrgRes) {};
	// Lists organizations the user belongs to.
	rpc ListOrgs(ListOrgsReq) returns (ListOrgsRes) {};
	// Updates orgnataion info.
	rpc UpdateOrg(UpdateOrgReq) returns (UpdateOrgRes) {};
	// Invites a user to the organization.
	rpc InviteUser(InviteUserReq) returns (InviteUserRes) {};
	// Joins an organization.
	rpc JoinOrg(JoinOrgReq) returns (JoinOrgRes) {};
	// Leaves an organization.
	rpc LeaveOrg(LeaveOrgReq) returns (LeaveOrgRes) {};
	// Set role of the member for the orgnization.
	rpc SetRoleOrg(SetRoleOrgReq) returns (SetRoleOrgRes) {};
	// Add identity to member.
	rpc AddMemberIdentity(AddMemberIdentityReq) returns (AddMemberIdentityRes) {};
	// Remove identity from member.
	rpc RemoveMemberIdentity(RemoveMemberIdentityReq) returns (RemoveMemberIdentityRes) {};
}

message ListIdentitiesReq {}
message ListIdentitiesRes {
	repeated Identity identities = 1; // List of identities of the user.
}

message NewOrgReq {}
message NewOrgRes {
	Org    org   = 1; // Created organization ID.
	Member owner = 2; // Owner of the organization, the actor.
}

message ListOrgsReq {}
message ListOrgsRes {
	// List of organizations the user belongs to.
	repeated Org orgs = 1;
}

message UpdateOrgReq {
	// Organization to update.
	Org org = 1;
}
message UpdateOrgRes {}

message InviteUserReq {
	bytes    org_id   = 1; // Organization to be invited.
	Identity identity = 2; // Identity of the user to invite.
}
message InviteUserRes {}

message JoinOrgReq {
	bytes org_id = 1; // Organization to join.
}
message JoinOrgRes {}

message LeaveOrgReq {
	bytes org_id = 1; // Organization to leave.
}
message LeaveOrgRes {}

message SetRoleOrgReq {
	bytes   member_id = 1; // ID of the member to change the role.
	RoleOrg role      = 2; // Role to be changed.
}
message SetRoleOrgRes {}

message AddMemberIdentityReq {
	bytes  member_id      = 1; // ID of the member to add the identity.
	string identity_value = 2; // Value of the identity to be added.
}
message AddMemberIdentityRes {}

message RemoveMemberIdentityReq {
	bytes  member_id      = 1; // ID of the member to remove the identity.
	string identity_value = 2; // Value of the identity to be removeed.
}
message RemoveMemberIdentityRes {}
