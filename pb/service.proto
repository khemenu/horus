//
syntax = "proto3";
package khepri.horus;

import "common.proto";

option go_package = "khepri.dev/horus/pb";

//
service Horus {
	// Creates organization.
	rpc NewOrg(NewOrgReq) returns (NewOrgRes) {};
	// Lists organizations the user belongs to.
	rpc ListOrgs(ListOrgsReq) returns (ListOrgsRes) {};
	// Updates orgnataion info.
	rpc UpdateOrg(UpdateOrgReq) returns (UpdateOrgRes) {};
	// Invites a user to the organization.
	rpc InviteUser(InviteUserReq) returns (InviteUserRes) {};
	// Joins an organization.
	rpc JoinOrg(JoinOrgReq) returns (JoinOrgRes) {};
	// Leaves an organization.
	rpc LeaveOrg(LeaveOrgReq) returns (LeaveOrgRes) {};
}

message NewOrgReq {}
message NewOrgRes {
	Org org = 1; // Created organization ID.
}

message ListOrgsReq {}
message ListOrgsRes {
	// List of organizations the user belongs to.
	repeated Org orgs = 1;
}

message UpdateOrgReq {
	// Organization to update.
	Org org = 1;
}
message UpdateOrgRes {}

message InviteUserReq {
	bytes    org_id   = 1; // Organization to be invited.
	Identity identity = 2; // Identity of the user to invite.
}
message InviteUserRes {}

message JoinOrgReq {
	bytes org_id = 1; // Organization to join.
}
message JoinOrgRes {}

message LeaveOrgReq {
	bytes org_id = 1; // Organization to leave.
}
message LeaveOrgRes {}
